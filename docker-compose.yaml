version: '3.8'

networks:
  beacon-network:

x-environment: &env
  - POSTGRES_USER=postgres
  - POSTGRES_PASSWORD=postgres
  - POSTGRES_BN_DATABASE=beacon-network
  - BEACON_NETWORK_CONFIG_DIR=/wildfly/BEACON-INF
  - BEACON_NETWORK_DB_CONNECTION_URL=jdbc:postgresql://postgres:5432/beacon-network
  - BEACON_NETWORK_DB_USERNAME=beacon
  - BEACON_NETWORK_DB_PASSWORD=beacon
  - JBOSS_JAVA_SIZING=-XX:+UseContainerSupport -XX:MaxRAMPercentage=70.0 -Xms128m
services:
  postgres:
    image: postgres:16.0-alpine
    container_name: "bn-db"
    restart: always
    environment: *env
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
      - ./postgresql/init.sh:/docker-entrypoint-initdb.d/init.sh:ro
    networks:
      - beacon-network
  wildfly:
    image: ghcr.io/elixir-europe/beacon-network-backend:latest
    container_name: "bn-server"
    depends_on:
      - postgres
    restart: always
    volumes:
      - ./wildfly/BEACON-INF:/wildfly/BEACON-INF
    hostname: wildfly
    networks:
      - beacon-network
    expose:
      - '8080'
    environment: *env

  frontend:
    image: ghcr.io/elixir-europe/beacon-network-ui:latest
    command: node /opt/yarn-v1.22.19/bin/yarn.js start
    hostname: frontend
    container_name: "bn-ui"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - beacon-network
    expose:
      - '3000'
    stdin_open: true
    volumes:
      - ./frontend/.env:/frontend/.env
      - ./frontend/config.json:/frontend/src/config.json

  nginx:
    image: nginx
    container_name: "bn-proxy"
    depends_on:
      - wildfly
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - beacon-network
    ports:
      - '8080:8080'